/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import blocco.adapter.AdapterAlgoritmo;
import blocco.adapter.AdapterRicevitore;
import blocco.adapter.AdapterTrasmettitore;
import blocco.proxy.AlgoritmoProxy;
import blocco.proxy.ProxyTarget;
import blocco.proxy.RicevitoreProxy;
import blocco.proxy.TrasmettitoreProxy;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.LinkedList;

/**
 *
 * @author Seby
 */
public class MASConfigClient extends javax.swing.JFrame {

    Applicazione applicazione = new Applicazione();
    
    /**
     * Creates new form MASConfigClient
     */
    public MASConfigClient() {
        initComponents();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jTextConfig = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaXML = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AirMAS - Client Configurazione");
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gfx/AirMAScc.png"))); // NOI18N

        jButton9.setText("Applica");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTextConfig.setText("localhost:60000");
        jTextConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextConfigActionPerformed(evt);
            }
        });

        jLabel2.setText("Indirizzo Configuratore");

        jTextAreaXML.setColumns(20);
        jTextAreaXML.setRows(5);
        jTextAreaXML.setText("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<AirMAS>\n \n <blocco id=\"Ricevitore1\">\n  <trasmettitori>\n  </trasmettitori>\n  <ricevitori>\n   <ricevitore>\n    <class>ricezione.RicevitoreSM</class>\n    <config key=\"sharedIngresso\">shared.dat</config>\n   </ricevitore>\n  </ricevitori>\n  <algoritmo>\n   <class>valutatori.Algoritmo</class>\n  </algoritmo>\n </blocco>\n \n <blocco id=\"Ricevitore2\">\n  <trasmettitori>\n   <trasmettitore>\n    <class>trasmissione.TrasmettitoreSM</class>\n    <config key=\"sharedUscita\">shared.dat</config>\n   </trasmettitore>\n  </trasmettitori>\n  <ricevitori>\n   <ricevitore>\n    <class>ricezione.RicevitoreFile</class>\n    <config key=\"fileIngresso\">file.dat</config>\n   </ricevitore>\n  </ricevitori>\n  <algoritmo>\n   <class>valutatori.Algoritmo</class>\n  </algoritmo>\n </blocco>\n \n <blocco id=\"Ricevitore3\">\n  <trasmettitori>\n   <trasmettitore>\n    <class>trasmissione.TrasmettitoreFile</class>\n    <config key=\"fileUscita\">file.dat</config>\n   </trasmettitore>\n  </trasmettitori>\n  <ricevitori>\n   <ricevitore>\n    <class>ricezione.RicevitoreJMS</class>\n    <config key=\"jmsIngresso\">myDestination</config>\n   </ricevitore>\n  </ricevitori>\n  <algoritmo>\n   <class>valutatori.Algoritmo</class>\n  </algoritmo>\n </blocco>\n \n <blocco id=\"Ricevitore4\">\n  <trasmettitori>\n   <trasmettitore>\n    <class>trasmissione.TrasmettitoreJMS</class>\n    <config key=\"jmsUscita\">myDestination</config>\n   </trasmettitore>\n  </trasmettitori>\n  <ricevitori>\n   <ricevitore>\n    <class>ricezione.RicevitoreREST</class>\n    <config key=\"restIngresso\">http://localhost:9998/WS/REST/</config>\n   </ricevitore>\n  </ricevitori>\n  <algoritmo>\n   <class>valutatori.Algoritmo</class>\n  </algoritmo>\n </blocco>\n \n <blocco id=\"Ricevitore5\">\n  <trasmettitori>\n   <trasmettitore>\n    <class>trasmissione.TrasmettitoreREST</class>\n    <config key=\"restUscita\">http://localhost:9998/WS/REST/</config>\n   </trasmettitore>\n  </trasmettitori>\n  <ricevitori>\n   <ricevitore>\n    <class>ricezione.RicevitoreSocket</class>\n    <config key=\"socketIngresso\">17782</config>\n   </ricevitore>\n  </ricevitori>\n  <algoritmo>\n   <class>valutatori.Algoritmo</class>\n  </algoritmo>\n </blocco>\n \n <blocco id=\"Ricevitore6\">\n  <trasmettitori>\n   <trasmettitore>\n    <class>trasmissione.TrasmettitoreSocket</class>\n    <config key=\"socketUscita\">localhost:17782</config>\n   </trasmettitore>\n  </trasmettitori>\n  <ricevitori>\n   <ricevitore>\n    <class>ricezione.RicevitoreSOAP</class>\n    <config key=\"soapIngresso\">http://localhost:17779/WS/SOAP/?wsdl</config>\n   </ricevitore>\n  </ricevitori>\n  <algoritmo>\n   <class>valutatori.Algoritmo</class>\n  </algoritmo>\n </blocco>\n \n <blocco id=\"Ricevitore7\">\n  <trasmettitori>\n   <trasmettitore>\n    <class>trasmissione.TrasmettitoreSOAP</class>\n    <config key=\"soapUscita\">http://localhost:17779/WS/SOAP/?wsdl</config>\n   </trasmettitore>\n  </trasmettitori>\n  <ricevitori>\n   <ricevitore>\n    <class>ricezione.RicevitoreSOAP</class>\n    <config key=\"soapIngresso\">http://localhost:17780/WS/SOAP/?wsdl</config>\n   </ricevitore>\n  </ricevitori>\n  <algoritmo>\n   <class>valutatori.Algoritmo</class>\n  </algoritmo>\n </blocco>\n \n</AirMAS>\n\n");
        jScrollPane1.setViewportView(jTextAreaXML);

        jMenu1.setText("File");

        jMenuItem1.setText("Apri...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Salva");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Salva con nome...");
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator1);

        jMenuItem4.setText("Esci");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane1)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextConfig, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton9)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 218, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton9)
                    .add(jTextConfig, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try{
            
            blocco.Blocco asc2 = new blocco.Blocco();
            asc2.getConf().put("socketUscita",jTextConfig.getText());
            AdapterTrasmettitore t = (new AdapterTrasmettitore((TrasmettitoreProxy)ProxyTarget.createProxy(Class.forName("trasmissione.TrasmettitoreSocket").newInstance())));
            t.config(asc2.getMonitor(), asc2.getConf());
            t.invia(jTextAreaXML.getText());
           
        }catch (Exception e){e.printStackTrace();}
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextConfigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextConfigActionPerformed

    private class Applicazione{
        private LinkedList<Blocco> blocchi = new LinkedList<>();
    
        @Override
        public String toString(){
             StringBuilder testo = new StringBuilder("<AirMAS>");
                for (Blocco b : blocchi){
                    testo.append(b.toString());
                }
                testo.append("\n</AirMAS>");
            return testo.toString();
        }
        
        public Blocco get(String s){
            
            for (Blocco b : blocchi){
                if (b.id.equals(s)){
                    return b;
                }
            }
            return null;
        }
        
        public boolean remove(String s){
            for (Blocco b : blocchi){
                if (b.id.equals(s)){
                    return blocchi.remove(b);
                }
            }
            return false;
        }
        
    }
    
    private class Blocco{
        public String id;
        public LinkedList<Elemento> trasmettitori = new LinkedList<>();
        public LinkedList<Elemento> ricevitori = new LinkedList<>();
        public Elemento algoritmo = new Elemento();

        public Blocco(String id) {
            this.id = id;
        }
        
        @Override
        public boolean equals(Object e){
            return ((Blocco)e).id.equals(this.id);
        }
        
        @Override
        public String toString(){
            StringBuilder testo = new StringBuilder("\n\t<blocco id=\""+id+"\">\n\t\t<trasmettitori>");
                    
            for (Elemento e : trasmettitori){
                testo.append("\n\t\t\t<trasmettitore>").append(e.toString()).append("\n\t\t\t</trasmettitore>");
                
            }        
            testo.append("\n\t\t</trasmettitori>\n\t\t<ricevitori>");
            
            
            for (Elemento e : ricevitori){
                testo.append("\n\t\t\t<ricevitore>").append(e.toString()).append("\n\t\t\t</ricevitore>");
            }        
            
            testo.append("\n\t\t</ricevitori>\n\t\t<algoritmo>").append(algoritmo.toString()).append("\n\t\t</algoritmo>\n\t</blocco>");
            
            return testo.toString();
        }
    }
    
    private class Elemento{
        public LinkedList<Valore> valori = new LinkedList<>();
        
        public String toString (){
            StringBuilder testo = new StringBuilder();
            for (Valore e : valori){
                testo.append("\n\t\t\t\t").append(e.toString());
            }
            return testo.toString();
        }
    }
    
    private class Valore{
        public String nome;
        public String prop;
        public String valore;

        public Valore(String nome, String prop, String valore) {
            this.nome = nome;
            this.prop = prop;
            this.valore = valore;
        }
        
        @Override
        public String toString (){
            if (prop.equals("")){
                return "<"+nome+">"+valore+"</"+nome+">";
            } else {
                return "<"+nome+" key=\""+prop+"\">"+valore+"</"+nome+">";
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MASConfigClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MASConfigClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MASConfigClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MASConfigClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MASConfigClient().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jTextAreaXML;
    private javax.swing.JTextField jTextConfig;
    // End of variables declaration//GEN-END:variables
}
