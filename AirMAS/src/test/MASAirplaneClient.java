/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import blocco.Evento;
import blocco.adapter.AdapterTrasmettitore;
import blocco.proxy.ProxyTarget;
import blocco.proxy.TrasmettitoreProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import ricezione.SOAP;

/**
 *
 * @author Seby
 */
public class MASAirplaneClient extends javax.swing.JFrame {

    Applicazione applicazione = new Applicazione();
    
    /**
     * Creates new form MASConfigClient
     */
    public MASAirplaneClient() {
        initComponents();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AirMAS - Client Configurazione");
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gfx/AirMAS.png"))); // NOI18N

        jButton9.setText("Invia Messaggio");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("File");

        jMenuItem4.setText("Esci");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane1)
                    .add(layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton9))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton9)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
        HashMap prop = new HashMap();
        prop.put("type", "posizione");
        prop.put("context", "start");
        prop.put("content", new int[]{2,2,2});
        Evento e = new Evento(prop);
        e.toString();
        for (int i = 0; i<1; i++){
            invia(e.toString());
        }
    
    
    }//GEN-LAST:event_jButton9ActionPerformed

    

    public static void invia(Object messaggio){
        try {
            URL url = new URL("http://localhost:17780/WS/SOAP/?wsdl");
            QName qname = new QName("http://ricezione/", "RicevitoreSOAPService");
            Service service = Service.create(url, qname);
            
            SOAP calc = (SOAP)service.getPort(SOAP.class);
            calc.ricevi(messaggio);
        } catch (MalformedURLException ex) {
            Logger.getLogger(MASAirplaneClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private class Applicazione{
        private LinkedList<Blocco> blocchi = new LinkedList<>();
    
        @Override
        public String toString(){
             StringBuilder testo = new StringBuilder("<AirMAS>");
                for (Blocco b : blocchi){
                    testo.append(b.toString());
                }
                testo.append("\n</AirMAS>");
            return testo.toString();
        }
        
        public Blocco get(String s){
            
            for (Blocco b : blocchi){
                if (b.id.equals(s)){
                    return b;
                }
            }
            return null;
        }
        
        public boolean remove(String s){
            for (Blocco b : blocchi){
                if (b.id.equals(s)){
                    return blocchi.remove(b);
                }
            }
            return false;
        }
        
    }
    
    private class Blocco{
        public String id;
        public LinkedList<Elemento> trasmettitori = new LinkedList<>();
        public LinkedList<Elemento> ricevitori = new LinkedList<>();
        public Elemento algoritmo = new Elemento();

        public Blocco(String id) {
            this.id = id;
        }
        
        @Override
        public boolean equals(Object e){
            return ((Blocco)e).id.equals(this.id);
        }
        
        @Override
        public String toString(){
            StringBuilder testo = new StringBuilder("\n\t<blocco id=\""+id+"\">\n\t\t<trasmettitori>");
                    
            for (Elemento e : trasmettitori){
                testo.append("\n\t\t\t<trasmettitore>").append(e.toString()).append("\n\t\t\t</trasmettitore>");
                
            }        
            testo.append("\n\t\t</trasmettitori>\n\t\t<ricevitori>");
            
            
            for (Elemento e : ricevitori){
                testo.append("\n\t\t\t<ricevitore>").append(e.toString()).append("\n\t\t\t</ricevitore>");
            }        
            
            testo.append("\n\t\t</ricevitori>\n\t\t<algoritmo>").append(algoritmo.toString()).append("\n\t\t</algoritmo>\n\t</blocco>");
            
            return testo.toString();
        }
    }
    
    private class Elemento{
        public LinkedList<Valore> valori = new LinkedList<>();
        
        public String toString (){
            StringBuilder testo = new StringBuilder();
            for (Valore e : valori){
                testo.append("\n\t\t\t\t").append(e.toString());
            }
            return testo.toString();
        }
    }
    
    private class Valore{
        public String nome;
        public String prop;
        public String valore;

        public Valore(String nome, String prop, String valore) {
            this.nome = nome;
            this.prop = prop;
            this.valore = valore;
        }
        
        @Override
        public String toString (){
            if (prop.equals("")){
                return "<"+nome+">"+valore+"</"+nome+">";
            } else {
                return "<"+nome+" key=\""+prop+"\">"+valore+"</"+nome+">";
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MASAirplaneClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MASAirplaneClient().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
